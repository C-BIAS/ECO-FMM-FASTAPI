openapi: 3.0.0

info:
  title: ECO-FMM-FASTAPI API
  version: 2.0.0
  description: API service for ECO-FMM-FASTAPI v2.0.0

paths:
  /tasks:
    get:
      summary: Retrieve a list of tasks
      operationId: getTasks
      parameters:
        - in: query
          name: category
          schema:
            type: string
          required: false
          description: Filter tasks by status category
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
      security:
        - bearerAuth: []

    post:
      summary: Create or update a task
      operationId: manageTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created or updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []

  /feedback:
    post:
      summary: Submit user feedback
      operationId: submitFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeedback'
      responses:
        '201':
          description: Feedback received
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedback_id:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []

components:
  securitySchemes:
    bearerAuth: # Define the security scheme as HTTP Bearer
      type: http
      scheme: bearer
      bearerFormat: JWT # Specify the bearer format, if applicable (e.g., JWT)
security:
- bearerAuth: []
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the task
          nullable: true
        title:
          type: string
          description: Title of the task
        description:
          type: string
          description: Description of the task
        due_date:
          type: string
          description: Due date of the task
        status:
          type: string
          description: Status of the task
        priority:
          type: integer
          minimum: 1
          maximum: 5
          description: Priority of the task, where 1 is the highest priority
        area:
          type: string
          nullable: true
          description: The area of the task (e.g., personal, work)

    UserFeedback:
      type: object
      properties:
        user_id:
          type: integer
          description: Unique identifier of the user
        feedback:
          type: string
          description: Feedback provided by the user