openapi: 3.0.0
info:
  title: ECO-FMM-FASTAPI
  version: v2.1.0
  description: FastAPI application to manage tasks and receive feedback
  contact:
    name: C-BIAS ENTERPRISES
    year: 2024
servers:
  - url: https://eco-fmm.replit.app
    description: Main server
paths:
  /tasks:
    post:
      summary: Create or update a task
      operationId: manageTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created or updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
    get:
      summary: Retrieve a list of tasks
      operationId: getTasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
      security:
        - bearerAuth: []

/tasks/{task_id}:
    get:
      summary: Retrieve a task by ID
      operationId: getTaskById
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
          description: Unique ID of the task
      responses:
        '200':
          description: Detailed information about a task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
      security:
        - bearerAuth: []
  /feedback:
    post:
      summary: Submit user feedback
      operationId: submitFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeedback'
      responses:
        '201':
          description: Feedback received
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedback_id:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
  /behaviors:
    post:
      summary: Add a new behavior
      operationId: addBehavior
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Behavior'
      responses:
        '201':
          description: Behavior added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  behavior_id:
                    type: integer
                  message:
                    type: string
      security:
        - bearerAuth: []
    get:
      summary: Retrieve a list of behaviors
      operationId: getBehaviors
      responses:
        '200':
          description: A list of behaviors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Behavior'
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique ID of the task
        title:
          type: string
          description: Title of the task
        description:
          type: string
          description: Description of the task
        due_date:
          type: string
          format: date
          description: Due date of the task
          nullable: true 
        status:
          type: string
          description: Current status of the task
        priority:
          type: integer
          description: Priority of the task, where 1 is the highest priority and 5 is the lowest
          minimum: 1
          maximum: 5
        area:
          type: string
          description: The area of the task (e.g., personal, work)
          nullable: true
      required:
        - title
        - description
        - status
        - priority
    UserFeedback:
      type: object
      required:
        - user_id
        - feedback
      properties:
        user_id:
          type: integer
          format: int64
          description: Unique identifier of the user
        feedback:
          type: string
          description: Feedback provided by the user
    Behavior:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique ID of the behavior
        description:
          type: string
          description: Description of the behavior
      required:
        - description
security:
  - bearerAuth: []

