openapi: 3.0.0
info:
  title: ECO-FMM-FASTAPI
  version: v1.1
  description: FastAPI application to manage tasks and receive feedback
  contact:
    name: C-BIAS ENTERPRISES
    year: 2024
servers:
  - url: http://example.com/
    description: Main server

paths:
  /:
    get:
      summary: Root Endpoint
      operationId: readRoot
      responses:
        '200':
          description: Welcome Message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /tasks:
    get:
      summary: Get All Tasks
      operationId: getTasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

    post:
      summary: Create or Update a Task
      operationId: manageTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created or updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                  message:
                    type: string

  /feedback:
    post:
      summary: Submit Feedback
      operationId: submitFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeedback'
      responses:
        '201':
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedback_id:
                    type: integer
                  message:
                    type: string

components:
  schemas:
    Task:
      type: object
      required:
        - title
        - description
        - due_date
        - status
      properties:
        title:
          type: string
        description:
          type: string
        due_date:
          type: string
        status:
          type: string
        priority:
          type: integer
          description: Task priority from 1 (highest) to 5 (lowest)
          minimum: 1
          maximum: 5
        dependencies:
          type: array
          items:
            type: string

    UserFeedback:
      type: object
      required:
        - user_id
        - feedback
      properties:
        user_id:
          type: integer
        feedback:
          type: string